---
# See https://maniacgeek.net/linux-open-source/comment-installer-vscodium-sur-ubuntu-linux/
- name: Add Docker debian repository
  deb822_repository:
    name: Docker
    state: present
    uris: https://download.docker.com/linux/ubuntu
    suites: plucky
    signed_by:  https://download.docker.com/linux/ubuntu/gpg
    components:
      - stable

- name: Install Docker packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Ensure group "docker" exists with correct gid
  ansible.builtin.group:
    name: docker
    state: present

- name: "Adding users"  
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop:
    - "{{ansible_user}}"
    - docker

- name: Install watchtower
  community.docker.docker_container:
    name: watchtower
    image: containrrr/watchtower
    state: started
    restart_policy: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

- name: Install kroki
  community.docker.docker_container:
    name: kroki
    image: yuzutech/kroki
    restart_policy: unless-stopped
    ports:
      - 29000:8000

#- name: Install openwebui
#  community.docker.docker_container:
#    name: openwebui
#    image: ghcr.io/open-webui/open-webui:main
#    restart_policy: unless-stopped
#    ports:
#      - 13000:8000
#    volumes:
#      - "{{home_folder}}/.open-webui:/app/backend/data"

- copy:
    content: |
      #!/bin/sh
      docker run --rm -ti --name=ctop --volume /var/run/docker.sock:/var/run/docker.sock:ro  quay.io/vektorlab/ctop:latest
    mode: '0750'
    dest: "{{local_bin_folder}}/ctop"
  become: true
  become_user: "{{ansible_user}}"

- copy:
    content: |
      #!/bin/sh
      docker run --name=taskjuggler --rm=true --net="none" -v ${PWD}:/tj3 treibholz/tj3:latest tj3 %*
    mode: '0750'
    dest: "{{local_bin_folder}}/tk"
  become: true
  become_user: "{{ansible_user}}"

- copy:
    content: |
      #!/bin/sh
      docker run --rm --name structurizr-lite -d -p 18080:8080 -v ${PWD}:/usr/local/structurizr structurizr/lite
    mode: '0750'
    dest: "{{local_bin_folder}}/structurizr-lite"
  become: true
  become_user: "{{ansible_user}}"

- file:
    path: "{{home_folder}}/.config/zspotify"
    state: directory
  become: true
  become_user: "{{ansible_user}}"

- copy:
    content: |
      #!/bin/sh
      docker run --rm -ti -v {{home_folder}}/.config/zspotify:/root/.zspotify -v {{home_folder}}/Musique:/root/Music jsavargas/zspotify
    mode: '0750'
    dest: "{{local_bin_folder}}/structurizr-lite"
  become: true
  become_user: "{{ansible_user}}"

- copy:
    content: |
      #!/bin/sh
      docker run -ti --rm mpepping/ponysay $@
    mode: '0750'
    dest: "{{local_bin_folder}}/ponysay"
  become: true
  become_user: "{{ansible_user}}"
